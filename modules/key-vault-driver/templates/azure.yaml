{% set workspace = '' %}   {# has to be a persistent volume #}
{% set pipeline_env_file = workspace|add:'.env' %}
{% set pipeline_secret_file = workspace|add:'.secret.env' %}
{% set pipeline_modules_path = workspace|add:'pipeline_modules' %}
{% set helm_chart_path = pipeline_modules_path|add:"/helm/azure/istio-aks" %}

steps:
  - task: HelmInstaller@0
    inputs:
      helmVersion: {{helmVersion}}
      installKubectl: true
      kubectlVersion: {{kubectlVersion}}
  - script: |
        az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
        az aks get-credentials --name {{cluster}} --resource-group {{resourceGroup}} --subscription $(ARM_SUBSCRIPTION_ID) --overwrite-existing -a
    displayName: "Get AKS Kubecofing"
    workingDirectory: {{ workingDir }}
  {% if job_type == 'deploy' %}
  - script: |
        helm repo add csi-secrets-store-provider-azure https://azure.github.io/secrets-store-csi-driver-provider-azure/charts
        helm repo update
        helm install csi csi-secrets-store-provider-azure/csi-secrets-store-provider-azure --namespace {{namespace}}
        kubectl apply -f https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/master/deployment/provider-azure-installer-windows.yaml
        kubectl create secret generic secrets-store-creds --from-literal clientid=$(ARM_CLIENT_ID) --from-literal clientsecret=$(ARM_CLIENT_SECRET)
        kubectl label secret secrets-store-creds secrets-store.csi.k8s.io/used=true
    displayName: "Helm Deploy {{applicationName}}"
    workingDirectory: {{ workingDir }}
  {% else %}
  - script: |
          helm uninstall csi --namespace {{namespace}};
          kubectl delete -f https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/master/deployment/provider-azure-installer.yaml
    displayName: "Helm Uninstall {{applicationName}}"
    workingDirectory: {{ workingDir }}
  {% endif %}
