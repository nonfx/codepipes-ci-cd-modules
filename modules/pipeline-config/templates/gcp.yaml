{% set workspace = '/workspace' %}   {# has to be a persistent volume #}
{% set pipeline_modules_path = workspace|add:'/pipeline_modules' %}
{% set google_credentials_path = workspace|add:'/codepipes-user-sa.json' %}

steps:
- id: 'Switch gcloud auth'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # If GOOGLE_CLOUD_KEYFILE_JSON isn't set, this pipeline doesn't require gcloud auth
    [[ -z $$GOOGLE_CLOUD_KEYFILE_JSON ]] && echo "GOOGLE_CLOUD_KEYFILE_JSON is empty...skipping gcloud auth" && exit 0

    # make sure GOOGLE_APPLICATION_CREDENTIALS is set
    export GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-'{{ google_credentials_path }}' }

    # write the service-account json to file at GOOGLE_APPLICATION_CREDENTIALS
    printf '%s' "$$GOOGLE_CLOUD_KEYFILE_JSON" > $$GOOGLE_APPLICATION_CREDENTIALS

    # activate gcloud cli tools to use GOOGLE_APPLICATION_CREDENTIALS
    gcloud auth activate-service-account --key-file $$GOOGLE_APPLICATION_CREDENTIALS

- id: 'Init setup'
  name: 'cldcvr/cpi-config'
  args:
  - '-c'
  - |
    set -e
    echo "Cloning the pipeline modules..."
    mkdir -p {{pipeline_modules_path}}
    git clone {{pipeline_module_git}} --branch {{pipeline_module_git_rev}} --single-branch {{pipeline_modules_path}}
timeout: {{ pipeline_timeout_sec }}s
queueTtl: {{ pipeline_queue_timeout_sec }}s
{% if pipeline_logs_bucket %}logsBucket: 'gs://{{ pipeline_logs_bucket }}'{% endif %}
tags:
{% for tag in pipeline_tags %}
- {{tag}}
{% endfor %}
options:
 {% if pipeline_machine_type %}machineType: {{ pipeline_machine_type }}{% endif %}
 {% if pipeline_disk_size_gb %}diskSizeGb: '{{ pipeline_disk_size_gb }}'{% endif %}
 env:
 - '__VG_EXPORTED_ENV_NAMES={% for env_key in pipeline_env %}{{env_key}} {% endfor %}'
 - '__VG_EXPORTED_SECRET_ENV_NAMES={% for env_key in pipeline_secret_env %}{{env_key}} {% endfor %}'
 {% for env_key, env_value in pipeline_env %}
 - '{{env_key}}={{ env_value }}'
 {% endfor %}
 secretEnv:
   {% for env_key in pipeline_secret_env %}
   - {{env_key}}
   {% endfor %}
{% if pipeline_secret_env && pipeline_secret_env_key %}
secrets:
- kmsKeyName: {{ pipeline_secret_env_key }}
  secretEnv:
    {% for env_key, env_value in pipeline_secret_env %}
    {{env_key}}: '{{ env_value }}'
    {% endfor %}
{% endif %}
