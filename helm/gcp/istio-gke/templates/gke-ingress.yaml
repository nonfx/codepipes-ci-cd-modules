{{- if .Values.ingress }}
apiVersion: extensions/v1
kind: Ingress
metadata:
  name: {{ .Values.projectName }}-istio-ingress
  namespace: istio-system
  annotations:
    # Enable use of manually pre-defined global static IP
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.staticIPName }}
    # Enable use of a GCP-managed certificate through a ManagedCertificate resource
    networking.gke.io/managed-certificates: {{ .Values.projectName }}-certificate
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  {{- range .Values.domains }}
  - host: {{ .name }} 
    http:
      paths:
      - path: /*
        backend:
          # In this case we don't go directly to app-specific services,
          # but first to the Istio ingress-gateway
          # We use port 80 because it is the "ingress-like" port of the ingress-gateway
          serviceName: istio-ingressgateway
          servicePort: 80
  {{- end }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: health
spec:
  gateways:
  - {{ .Values.projectName }}-httpbin-gateway
  hosts:
  - "*"
  http:
  - match:
    - headers:
        user-agent:
          prefix: GoogleHC
      method:
        exact: GET
      uri:
        exact: /
    rewrite:
      authority: istio-ingressgateway.istio-system.svc.cluster.local:15020
      uri: /healthz/ready
    route:
    - destination:
        host: istio-ingressgateway.istio-system.svc.cluster.local
        port:
          number: 15020
{{- end }}