provisioner: aws
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
author: CloudCover
meta: {}
inputs:
  properties:
    pipeline_compute_type:
      title: Compute Type
      description: Specifies the compute resources used by this build environment.
      type: string
      default: BUILD_GENERAL1_MEDIUM
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_job_id:
      title: Job ID
      description: This must be unique across all of the build projects in your AWS account.
      type: string
      default: AUTO_JOB_ID
    pipeline_logs_bucket:
      title: Logs Bucket
      description: S3 bucket for logs generated by the pipeline.
      type: string
      default: ""
    pipeline_run_timeout_min:
      title: Run Timeout [min]
      description: Amount of time in minutes the pipeline will be allowed to run.
      type: integer
      default: 480
    pipeline_queue_timeout_min:
      title: Queue Timeout [min]
      description: Amount of time in minutes the pipeline will be allowed to be queued waiting to run.
      type: integer
      default: 480
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available secret variable id.
      type: object
      default: {}
    pipeline_tags:
      title: Tags
      description: Tags assigned to the pipeline.
      type: object
      default: {}
    privileged_mode:
      title: Privileged Mode
      description: "When using docker, the privileged mode needs to be set to `true`. ref: https://docs.aws.amazon.com/codebuild/latest/userguide/troubleshooting.html#troubleshooting-cannot-connect-to-docker-daemon"
      type: string
      default: "false"
    vpc_config:
      title: VPC Config
      description: "VpcConfig enables CodeBuild to access resources in an Amazon VPC."
      type: object
      default: {}
      properties:
        securityGroupIds:
          title: Security Group IDs
          description: "A list of one or more security groups IDs in your Amazon VPC."
          type: array
          default: []
          items:
            type: string
        subnets:
          title: Subnet IDs
          description: "A list of one or more subnet IDs in your Amazon VPC."
          type: array
          default: []
          items:
            type: string
        vpcId:
          title: VPC ID
          description: "The ID of the Amazon VPC."
          type: string
          default: ""
  internal:
    - pipeline_logs_bucket
    - pipeline_env
    - pipeline_secret_env
    - privileged_mode
template: |
  artifacts:
    type: "NO_ARTIFACTS"
  badgeenabled: null
  buildbatchconfig: null
  cache:
    type: "NO_CACHE"
  description: null
  encryptionkey: null
  environment:
    certificate: null
    computetype: "{{ pipeline_compute_type }}"
    environmentvariables:
    {% for env_key, env_value in pipeline_env %}
    - name: {{ env_key|cpi_quote }}
      value: {{ env_value|cpi_quote }}
      type: "PLAINTEXT"
    {% endfor %}
    {% for env_key, env_value in pipeline_secret_env %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
      type: "SECRETS_MANAGER"
    {% endfor %}
    image: "aws/codebuild/standard:5.0"
    imagepullcredentialstype: "CODEBUILD"
    privilegedmode: {{ privileged_mode }}
    registrycredential: null
    type: "LINUX_CONTAINER"
  filesystemlocations: null
  logsconfig:
    cloudwatchlogs:
      status: DISABLED
    s3logs:
      encryptiondisabled: false
      location: "{{ pipeline_logs_bucket }}"
      status: "ENABLED"
  name: "{{ pipeline_job_id }}"
  queuedtimeoutinminutes: {{ pipeline_queue_timeout_min }}
  secondaryartifacts: null
  secondarysourceversions: null
  secondarysources: null
  servicerole: "codebuild-new"
  source:
    auth: null
    buildstatusconfig: null
    buildspec: ""
    gitclonedepth: null
    gitsubmodulesconfig: null
    insecuressl: null
    location: null
    reportbuildstatus: null
    sourceidentifier: null
    type: "NO_SOURCE"
  sourceversion: null
  tags:
  {% for tag_key, tag_value in pipeline_tags %}
  - key: "{{ tag_key }}"
    value: "{{ tag_value }}"
  {% endfor %}
  timeoutinminutes: {{ pipeline_run_timeout_min }}
  {% if (not vpc_config) or vpc_config|length == 0 %}
  vpcconfig: null
  {% else %}
  vpcconfig: {{ vpc_config|cpi_json }}
  {% endif %}
