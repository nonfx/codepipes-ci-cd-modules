provisioner: aws
name: platform
version: 1
revision: 1
displayName: Platform
description: Generates IaC from application platform dependencies
target: ""
keywords:
  - terraform
  - platform
author: Ollion
meta: {}
inputs:
  properties:
    artifact_bucket:
      title: Artifact Bucket
      description: Name of the bucket to store Terraform artifacts.
      type: string
      pattern: "[a-z0-9\\-.]{3,63}" # see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html
    artifact_dir:
      title: Artifact Directory
      description: Name of the root directory in the artifact bucket.
      type: string
    platform_checkout_src:
      title: Platform Source Repository URL
      description: Path to Git repository with platform code.
      type: string
    platform_checkout_target:
      title: Platform Source Revision Identifier
      description: Git branch, tag or commit hash to checkout.
      type: string
    platform_root:
      title: Platform Root Directory
      description: Relative path to the platform code.
      type: string
      default: .
    tr_app_files:
      title: Terrarium Application File
      description: Name of the application definition file artifact.
      type: array
      default: []
      items:
        type: string
    tr_version:
      title: Terrarium Version
      description: Version of Terrarium to be used to generate IaC from the platform.
      type: string
      default: "0.11.1"
    platform_clone_dir:
      title: Platform Clone Directory
      description: Local path where to clone the platform code.
      type: string
      default: platform
    generated_iac_dir:
      title: IaC Destination Directory
      description: Local path for the generated IaC code.
      type: string
      default: platform
    generated_iac_artifact:
      title: IaC Artifact Name
      description: Name of the generated IaC artifact.
      type: string
      default: generated-iac.tar.bz2
    platform_metadata_file:
      title: Platform Metadata File
      description: Name of the platform metadata file.
      type: string
      default: terrarium.yaml
  required:
    - platform_checkout_src
    - platform_checkout_target
    - artifact_bucket
    - artifact_dir
    - tr_version
    - platform_clone_dir
    - generated_iac_dir
  internal:
    - platform_checkout_src
    - platform_checkout_target
    - platform_root
    - artifact_bucket
    - artifact_dir
    - tr_app_files
    - tr_version
    - platform_clone_dir
    - generated_iac_dir
    - platform_metadata_file
template: |
  {% set artifact_root_path = artifact_bucket|add:"/"|add:artifact_dir %}     {# <artifact_bucket>/<artifact_dir> #}
  {% set artifact_build_path = artifact_root_path|add:"/"|add:"$CODEBUILD_BUILD_ID" %}  {# <artifact_bucket>/<artifact_dir>/<build_id> #}
  {% set local_checkout_path = '$CODEBUILD_SRC_DIR/'|add:platform_clone_dir %}
  {% set local_platform_path = local_checkout_path|add:"/"|add:platform_root %}
  {% set local_artifact_path = '$CODEBUILD_SRC_DIR/artifacts' %}
  {% set local_iac_dest_path = '$CODEBUILD_SRC_DIR/'|add:generated_iac_dir %}
  {% set local_iac_archive_path = local_artifact_path|add:"/"|add:generated_iac_artifact %}

  {# uploads a file artifact, by default fail on error #}
  {% macro upload_artifact_cmd(file, ignore_err=false) %}aws --color=off --output=json s3 cp --only-show-errors "{{ local_artifact_path }}/{{ file }}" "s3://{{ artifact_build_path }}/{{ file }}" || {{ ignore_err|yesno:"true,false" }}{% endmacro %}

  ########################################################################################################################################################
  # All artifacts generated by invocation of this pipeline will be copied to bucket '//{{ artifact_build_path }}'.                                       #
  # The application definition files will be downloaded to '{{ local_artifact_path }}'.                                                                  #
  # Platform code will be checked out to '{{ local_checkout_path }}'.                                                                                    #
  # The generated IaC code will be stored in '{{ local_iac_dest_path }}'.                                                                                #
  # The generated IaC code will be archived and uploaded to bucket '//{{ artifact_build_path }}/{{ generated_iac_artifact }}'.                           #
  # The platform metadata will be uploaded to bucket '//{{ artifact_build_path }}/{{ platform_metadata_file }}'.                                         #
  ########################################################################################################################################################

  version: 0.2
  env:
    shell: '/bin/sh'
  phases:
    install:
      commands:
        - cd "/tmp"
        - wget --no-verbose "https://github.com/cldcvr/terrarium/releases/download/v{{ tr_version }}/terrarium-v{{ tr_version }}-linux-x86_64.tar.gz"
        - tar -xzf terrarium-v{{ tr_version }}-linux-x86_64.tar.gz -C /usr/bin
    pre_build:
      commands:
        # initialize workspace
        - mkdir -p "{{ local_artifact_path }}"
        - mkdir -p "{{ local_checkout_path }}"
        # download platform dependency definitions for all applications
        {% for app_file in tr_app_files %}
        - 'aws --color=off --output=json s3 cp --only-show-errors "s3://{{ artifact_root_path }}/{{ app_file }}" "{{ local_artifact_path }}"'
        {% endfor %}
        # clone platform code
        - git clone --no-checkout "{{ platform_checkout_src }}" "{{ local_checkout_path }}"
        # checkout platform revision
        - cd "{{ local_checkout_path }}"
        - git checkout "{{ platform_checkout_target }}"
        # generate IaC code for the dependencies using the platform
        - mkdir -p "{{ local_iac_dest_path }}"
        - terrarium generate --platform-dir "{{ local_platform_path }}" --output-dir "{{ local_iac_dest_path }}" {% for app_file in tr_app_files %}--app "{{ local_artifact_path }}/{{ app_file }}" {% endfor %}
        # archive the generated IaC
        - tar -cjf "{{ local_iac_archive_path }}" -C "{{ local_iac_dest_path }}" .
        - cp -f "{{ local_platform_path }}/{{ platform_metadata_file }}" "{{ local_artifact_path }}"
      finally:
        - {{ upload_artifact_cmd(platform_metadata_file, false) }}
        - {{ upload_artifact_cmd(generated_iac_artifact, true) }}
