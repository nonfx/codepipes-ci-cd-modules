provisioner: azure
name: go-unittest
version: 1
revision: 1
displayName: Go Unit Test
description: Runs units tests and collects code coverage data
target: ""
category: unit test
keywords:
  - default
  - go
  - Test
author: CloudCover
meta: {}
inputs:
  properties:
    working_dir:
      title: Working directory
      description: The current working directory to execute command
      type: string
      default: repo
    go_version:
      title: Golang version
      description: The version of Golang to use
      type: string
      default: latest
    go_test_args:
      title: Go Test args
      description: Arguments for Go test command
      type: array
      items:
        type: string
      default: []
    coverage_file:
      title: Code Coverage file
      description: Unit test coverage file to be analyzed by SonarCloud
      type: string
      default: "coverage.out"
  internal:
    - working_dir
template: |
  steps:
  - task: GoTool@0
    inputs:
      version: {{go_version}}
    displayName: "Install and Select go version {{go_version}}"
  - script: |
      export CGO_ENABLED=${CGO_ENABLED:-0}
      export GOOS=${GOOS:-linux}
      go version
      go test -v -coverprofile={{ coverage_file }} -coverpkg ./... {% for arg in go_test_args %} {{ arg }} {% endfor %} ./...
    displayName: 'Go Unit Tests with coverage'
    workingDirectory: {{ working_dir }}
  - task: PublishPipelineArtifact@1
    displayName: "Save coverage file"
    inputs:
      targetPath: '{{ working_dir }}/{{ coverage_file }}'
      artifactName: 'coverage'
