provisioner: azure
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
author: CloudCover
meta: {}
inputs:
  properties:
    variable_group_name:
      title: Secret Variables Group
      description: Keeps all secret variables available to pipeline.
      type: string
      default: ""
    pool_name:
      title: Pool Name
      description: Use selfhosted agent by proving agent pool name.
      type: string
      default: ""
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available variables to encrypted values.
      type: object
      default: {}
    pipeline_secret_env_key:
      title: Secret Environment Encryption Key
      description: Name of a KMS key used to encrypt secret values.
      type: string
      default: ""
  internal:
    - variable_group_name
    - pipeline_env
    - pipeline_secret_env
    - pipeline_secret_env_key
template: |
  {% set workspace = '$BUILD_SOURCESDIRECTORY' %}   {# has to be a persistent volume #}
  {% set pipeline_env_file = workspace|add:'/.env' %}
  pool:
  {% if pool_name %}
    name: {{ pool_name }}
  {% else %}
    vmImage: ubuntu-latest
  {% endif %}
  name: '$(Date:yyyyMMdd)$(Rev:.r)'
  steps:
  - script: |
      {{ pool_name }}
      {% for env_key in pipeline_env %}
      export {{env_key}}="$({{env_key}})"
      printf "{{env_key}}=%s\n" "$(printf "%s" "${{env_key}}" | jq -aRs .)" >> {{pipeline_env_file}}
      {%- endfor %}

      {% for env_key in pipeline_secret_env %}
      export {{env_key}}="$({{env_key}})"
      printf "{{env_key}}=%s\n" "$(printf "%s" "${{env_key}}" | jq -aRs .)" >> {{pipeline_env_file}}
      {%- endfor %}
    displayName: 'Pipeline Config'
  {% if variable_group_name -%}
  variables:
  - group: {{ variable_group_name }}
  {%- endif %}
