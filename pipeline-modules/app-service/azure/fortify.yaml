provisioner: azure
name: fortify
version: 1
revision: 1
displayName: Fortify SAST Scanner
description: Scans code for vulnerabilities
target: ""
category: security
keywords:
  - fortify
  - Security
author: CloudCover
meta: {}
env:
  - CPI__SCAN_CONTROLLER_URL
  - CPI__UP_TOKEN
  - CPI__FORTIFY_TOKEN
inputs:
  properties:
    pool_name:
      title: Pool Name
      description: Use selfhosted agent by proving agent pool name.
      type: string
      default: ""
    fortify_application_id:
      title: Fortify Application ID
      description: If not provided Code Pipes application name will be used
      type: string
      default: ""
    applicationName:
      title: Application name
      description: Code Pipes application name
      type: string
      default: ""
  internal:
    - applicationName
template: |
  {% set scancentral = '/home/azureuser/client/bin/scancentral' %}
  {% set fmt_app_name = applicationName | cpi_replacespecial %}
  steps:
    - script: |
        if [[ "$SKIP_FORTIFY" = true ]]; then
          echo "Skipping Fortify as requested"
        else
          scanToken=$({{scancentral}} -url $(CPI__SCAN_CONTROLLER_URL) start -bt none -upload -application {% if fortify_application_id %} {{ fortify_application_id }}{% else %}{{ fmt_app_name }}{% endif %} -version 1.0 -b $(Build.BuildId) -uptoken $CPI__UP_TOKEN -bf *.csproj)
          token=$( echo $scanToken |  grep -Eo 'token: [a-zA-Z0-9-]+' | cut -d' ' -f2)
          {{scancentral}} -url $CPI__SCAN_CONTROLLER_URL retrieve -block -f worker.fpr -token $token
          projDetails=$(curl 'https://ssc.nxplatform.io/ssc/api/v1/projects?fields=id,name,description&start=0&limit=10&orderby=name&includeInactive=false&myAssignedIssues=false' -H "accept: application/json" -H "Authorization: FortifyToken $CPI__FORTIFY_TOKEN")
          id=$(echo $projDetails | jq ".data[] | select(.name == \"{{ fmt_app_name }}\" | .id")
          curl -X POST "https://ssc.nxplatform.io/ssc/api/v1/projectVersions/${id}/artifacts" -H "accept: application/json" -H "Authorization: FortifyToken $CPI__FORTIFY_TOKEN" -H "Content-Type: multipart/form-data" -F "file=@worker.fpr"
          curl -k -X GET "https://ssc.nxplatform.io/ssc/api/v1/projectVersions/${id}/issues?start=0&limit=200&fields=friority&showhidden=false&showremoved=false&showsuppressed=false&showshortfilenames=false" -H "accept: application/json" -H "Authorization: FortifyToken $CPI__FORTIFY_TOKEN" > $(Build.BinariesDirectory)/out/output.log
          cat $(Build.BinariesDirectory)/out/output.log
          critical_count=$(cat $(Build.BinariesDirectory)/out/output.log | jq '.data[].friority' | grep "Critical" | wc -l)
          if [ $critical_count -gt 0 ]; then
            # Print an error message andset pipeline fail variable
            echo "Error: There are 'critical' severity vulnerabilities in the code."
            failPipeline=false
          fi
          high_count=$(cat $(Build.BinariesDirectory)/out/output.log | jq '.data[].friority' | grep "High" | wc -l)
          if [ $high_count -gt 0 ]; then
            # Print an error message and set pipeline fail variable
            echo "Error: There are 'high' severity vulnerabilities in the code.."
            failPipeline=false
          fi
          # Check if the pipeline fail variable is true
          if [ $failPipeline = true ]; then
              echo "There are $critical_count Critical and $high_count High Vulnerabilites. Therefore, failing the Build. Please fix the vulnerability and run the build again. "
              exit 124
          fi
          rm -rf $(Build.BinariesDirectory)/out/output.log
        fi
    displayName: 'Run Fortify Scan'