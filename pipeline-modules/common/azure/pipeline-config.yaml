provisioner: azure
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
  - cp_internal
author: Ollion
meta: {}
inputs:
  properties:
    variable_group_name:
      title: Secret Variables Group
      description: Keeps all secret variables available to pipeline.
      type: string
      default: ""
    pool_name:
      title: Pool Name
      description: Use selfhosted agent by proving agent pool name.
      type: string
      default: ""
    pipeline_module_git:
      title: Pipeline module git repo url
      description: git url for cloning the pipeline module repo.
      type: string
    pipeline_module_git_rev:
      title: Pipeline module git repo revision
      description: git revision for cloning the pipeline module repo.
      type: string
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available variables to encrypted values.
      type: object
      default: {}
  internal:
    - variable_group_name
    - pipeline_env
    - pipeline_secret_env
    - pipeline_module_git
    - pipeline_module_git_rev

template: |
  {% set workspace = '$(Build.SourcesDirectory)' %}
  {% set pipeline_modules_path = workspace|add:'/pipeline_modules' %}
  {% set common_scripts_path = pipeline_modules_path|add:'/assets/scripts' %}

  name: '$(Date:yyyyMMdd)$(Rev:.r)'
  trigger: none
  pool:
  {% if pool_name %}
    name: {{ pool_name }}
  {% else %}
    vmImage: ubuntu-latest
  {% endif %}
  steps:
  - script: |
      echo "Cloning the pipeline modules..."
      mkdir -p {{pipeline_modules_path}}
      git clone {{pipeline_module_git}} --branch {{pipeline_module_git_rev}} --single-branch {{pipeline_modules_path}}
      echo '##vso[task.prependpath]{{ common_scripts_path }}'
      export PATH={{ common_scripts_path }}:$PATH
      install-jq.sh
  variables:
    - group: {{ variable_group_name }}
    - name: __VG_EXPORTED_ENV_NAMES
      value: {% for env_key in pipeline_env %} {{env_key}} {% endfor %}
    - name: __VG_EXPORTED_SECRET_ENV_NAMES
      value: {% for env_key in pipeline_secret_env %} {{env_key}} {% endfor %}
