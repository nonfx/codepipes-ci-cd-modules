provisioner: gcp
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
  - cp_internal
author: CloudCover
meta:
  gcpRoles:
    - roles/cloudkms.cryptoKeyDecrypter
inputs:
  properties:
    pipeline_disk_size_gb:
      title: Disk Size [GB]
      description: Amount of disk space in GB allocated for the pipeline.
      type: integer
      minimum: 1
      default: 300
      maximum: 1000
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_logs_bucket:
      title: Logs Bucket
      description: Cloud Storage bucket for logs generated by the pipeline.
      type: string
      default: ""
    pipeline_machine_type:
      title: Machine Type
      description: Type of the VM used to run the pipeline.
      type: string
      default: UNSPECIFIED
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available variables to encrypted values.
      type: object
      default: {}
    pipeline_secret_env_key:
      title: Secret Environment Encryption Key
      description: Name of a KMS key used to encrypt secret values.
      type: string
      default: ""
    pipeline_tags:
      title: Tags
      description: Tags assigned to the pipeline.
      type: array
      default: []
      items:
        type: string
    pipeline_timeout_sec:
      title: Timeout [s]
      description: Amount of time in seconds the pipeline will be allowed to run.
      type: integer
      minimum: 1
      maximum: 86400 # 24*60*60
      default: 4000
    pipeline_queue_timeout_sec:
      title: Queue Timeout [s]
      description: Amount of time in seconds the pipeline will be allowed to be queued waiting to run.
      type: integer
      minimum: 1
      default: 7200
    pipeline_module_git:
      title: Pipeline module git repo url
      description: git url for cloning the pipeline module repo.
      type: string
    pipeline_module_git_rev:
      title: Pipeline module git repo revision
      description: git revision for cloning the pipeline module repo.
      type: string
    tag:
      title: Tag of either container or artifact
      description: git revision for cloning the pipeline module repo.
      type: string
    repo_dir:
      title: Repo Dir
      description: Repo Dir
      type: string
    repository:
      title: Artifact repository
      description: Artifact repository (docker repo for containerImage or Git repo for GitCode)
      type: string
    worker_pool:
      title: Cloud Build Worker Pool
      description: Name of Cloud Build Private Worker Pool .i.e projects/WORKERPOOL_PROJECT_ID/locations/REGION/workerPools/my-pool
      type: string
      default: ""
  internal:
    - pipeline_env
    - pipeline_secret_env
    - pipeline_secret_env_key
    - pipeline_module_git
    - pipeline_module_git_rev
    - tag
    - repo_dir
    - repository
template: |
  {% set workspace = '/workspace' %}   {# has to be a persistent volume #}
  {% set pipeline_modules_path = workspace|add:'/pipeline_modules' %}
  {% set google_credentials_path = workspace|add:'/codepipes-user-sa.json' %}

  steps:
  - id: 'Switch gcloud auth'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      # If GOOGLE_CLOUD_KEYFILE_JSON isn't set, this pipeline doesn't require gcloud auth
      [[ -z $$GOOGLE_CLOUD_KEYFILE_JSON ]] && echo "GOOGLE_CLOUD_KEYFILE_JSON is empty...skipping gcloud auth" && exit 0

      # make sure GOOGLE_APPLICATION_CREDENTIALS is set
      export GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-'{{ google_credentials_path }}' }

      # write the service-account json to file at GOOGLE_APPLICATION_CREDENTIALS
      printf '%s' "$$GOOGLE_CLOUD_KEYFILE_JSON" > $$GOOGLE_APPLICATION_CREDENTIALS

      # activate gcloud cli tools to use GOOGLE_APPLICATION_CREDENTIALS
      gcloud auth activate-service-account --key-file $$GOOGLE_APPLICATION_CREDENTIALS

  - id: 'Init setup'
    name: 'cldcvr/cpi-config'
    args:
    - '-c'
    - |
      set -e
      echo "Cloning the pipeline modules..."
      mkdir -p {{pipeline_modules_path}}
      git clone {{pipeline_module_git}} --branch {{pipeline_module_git_rev}} --single-branch {{pipeline_modules_path}}
  timeout: {{ pipeline_timeout_sec }}s
  queueTtl: {{ pipeline_queue_timeout_sec }}s
  {% if pipeline_logs_bucket %}logsBucket: 'gs://{{ pipeline_logs_bucket }}'{% endif %}
  tags:
  {% for tag in pipeline_tags %}
  - {{tag}}
  {% endfor %}
  options:
  {% if worker_pool %}
   workerPool: {{ worker_pool }}
  {% else %}
   {% if pipeline_machine_type %}machineType: {{ pipeline_machine_type }}{% endif %}
   {% if pipeline_disk_size_gb %}diskSizeGb: '{{ pipeline_disk_size_gb }}'{% endif %}
  {% endif %}
   env:
   - '__VG_EXPORTED_ENV_NAMES={% for env_key in pipeline_env %}{{env_key}} {% endfor %}'
   - '__VG_EXPORTED_SECRET_ENV_NAMES={% for env_key in pipeline_secret_env %}{{env_key}} {% endfor %}'
   {% for env_key, env_value in pipeline_env %}
   - '{{env_key}}={{ env_value }}'
   {% endfor %}
   secretEnv:
     {% for env_key in pipeline_secret_env %}
     - {{env_key}}
     {% endfor %}
  {% if pipeline_secret_env && pipeline_secret_env_key %}
  secrets:
  - kmsKeyName: {{ pipeline_secret_env_key }}
    secretEnv:
      {% for env_key, env_value in pipeline_secret_env %}
      {{env_key}}: '{{ env_value }}'
      {% endfor %}
  {% endif %}