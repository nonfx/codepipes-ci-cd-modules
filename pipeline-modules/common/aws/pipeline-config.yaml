provisioner: aws
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
author: Ollion
meta: {}
inputs:
  properties:
    pipeline_compute_type:
      title: Compute Type
      description: Specifies the compute resources used by this build environment. URL- "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html"
      type: string
      default: BUILD_GENERAL1_SMALL
      enum:
        - BUILD_GENERAL1_SMALL
        - BUILD_GENERAL1_MEDIUM
        - BUILD_GENERAL1_LARGE
        - BUILD_GENERAL1_2XLARGE
    pipeline_image:
      title: CodeBuild Image Type
      description: AWS CodeBuild supports the following Docker images that are available in the CodeBuild. URL- "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html"
      type: string
      default: "aws/codebuild/standard:7.0"
      enum:
        - aws/codebuild/amazonlinux2-x86_64-standard:4.0
        - aws/codebuild/amazonlinux2-x86_64-standard:5.0
        - aws/codebuild/amazonlinux2-x86_64-standard:corretto8
        - aws/codebuild/amazonlinux2-x86_64-standard:corretto11
        - aws/codebuild/amazonlinux2-aarch64-standard:3.0
        - aws/codebuild/standard:5.0
        - aws/codebuild/standard:6.0
        - aws/codebuild/standard:7.0
        - aws/codebuild/windows-base:2019-1.0
        - aws/codebuild/windows-base:2019-2.0
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_job_id:
      title: Job ID
      description: This must be unique across all of the build projects in your AWS account.
      type: string
      default: AUTO_JOB_ID
    pipeline_logs_bucket:
      title: Logs Bucket
      description: S3 bucket for logs generated by the pipeline.
      type: string
      default: ""
    pipeline_run_timeout_min:
      title: Run Timeout [min]
      description: Amount of time in minutes the pipeline will be allowed to run.
      type: integer
      default: 60
      minimum: 5
      maximum: 480
    pipeline_queue_timeout_min:
      title: Queue Timeout [min]
      description: Amount of time in minutes the pipeline will be allowed to be queued waiting to run.
      type: integer
      default: 60
      minimum: 5
      maximum: 480
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available secret variable id.
      type: object
      default: {}
    pipeline_tags:
      title: Tags
      description: Tags assigned to the pipeline.
      type: array
      default: []
      items:
        type: object
        required: [key, value]
        properties:
          key:
            title: Key Name
            description: "Enter key name for tag"
            type: string
          value:
            title: Key Value
            description: "Enter key Value name for tag"
            type: string
    privileged_mode:
      title: Privileged Mode
      description: "When using docker, the privileged mode needs to be set to `true`. ref: https://docs.aws.amazon.com/codebuild/latest/userguide/troubleshooting.html#troubleshooting-cannot-connect-to-docker-daemon"
      type: string
      default: "false"
    vpc_config:
      title: VPC Config
      description: "VpcConfig enables CodeBuild to access resources in an Amazon VPC."
      type: object
      required: [securitygroupids, subnets , vpcid]
      default: {}
      properties:
        securitygroupids:
          title: Security Group IDs
          description: "A list of one or more security groups IDs in your Amazon VPC."
          type: array
          default: []
          items:
            type: string
        subnets:
          title: Subnet IDs
          description: "A list of one or more subnet IDs in your Amazon VPC."
          type: array
          default: []
          items:
            type: string
        vpcid:
          title: VPC ID
          description: "The ID of the Amazon VPC."
          type: string
          default: ""
    pipeline_module_git:
      title: Pipeline module git repo url
      description: git url for cloning the pipeline module repo.
      type: string
    pipeline_module_git_rev:
      title: Pipeline module git repo revision
      description: git revision for cloning the pipeline module repo.
      type: string
  internal:
    - pipeline_logs_bucket
    - pipeline_env
    - pipeline_secret_env
    - privileged_mode
    - pipeline_module_git
    - pipeline_module_git_rev
    - pipeline_job_id

template: |
  {% set workspace = '$CODEBUILD_SRC_DIR' %}   {# has to be a persistent volume #}
  {% set pipeline_modules_path = workspace|add:'/pipeline_modules' %}
  {% set common_scripts_path = pipeline_modules_path|add:'/assets/scripts' %}

  artifacts:
    type: "NO_ARTIFACTS"
  badgeenabled: null
  buildbatchconfig: null
  cache:
    type: "NO_CACHE"
  description: null
  encryptionkey: null
  environment:
    certificate: null
    computetype: "{{ pipeline_compute_type }}"
    environmentvariables:
    - name: "__VG_EXPORTED_ENV_NAMES"
      value: "{% for env_key in pipeline_env %} {{env_key}} {% endfor %}"
      type: "PLAINTEXT"
    - name: "__VG_EXPORTED_SECRET_ENV_NAMES"
      value: "{% for env_key in pipeline_secret_env %} {{env_key}} {% endfor %}"
      type: "PLAINTEXT"
    {% for env_key, env_value in pipeline_env %}
    - name: {{ env_key|cpi_quote }}
      value: {{ env_value|cpi_quote }}
      type: "PLAINTEXT"
    {% endfor %}
    {% for env_key, env_value in pipeline_secret_env %}
    - name: "{{ env_key }}"
      value: "{{ env_value }}"
      type: "SECRETS_MANAGER"
    {% endfor %}
    image : {{ pipeline_image }}
    imagepullcredentialstype: "CODEBUILD"
    privilegedmode: {{ privileged_mode }}
    registrycredential: null
    type: "LINUX_CONTAINER"
  filesystemlocations: null
  logsconfig:
    cloudwatchlogs:
      status: DISABLED
    s3logs:
      encryptiondisabled: false
      location: "{{ pipeline_logs_bucket }}"
      status: "ENABLED"
  name: "{{ pipeline_job_id }}"
  queuedtimeoutinminutes: {{ pipeline_queue_timeout_min }}
  secondaryartifacts: null
  secondarysourceversions: null
  secondarysources: null
  servicerole: "codebuild-new"
  source:
    auth: null
    buildstatusconfig: null
    buildspec: |
      env:
        shell: bash
      phases:
        pre_build:
          commands:
            - echo "Cloning the pipeline modules..."
            - mkdir -p {{pipeline_modules_path}}
            - git clone {{pipeline_module_git}} --branch {{pipeline_module_git_rev}} --single-branch {{pipeline_modules_path}}
            - export PATH={{ common_scripts_path }}:$PATH
            - install-jq.sh
    gitclonedepth: null
    gitsubmodulesconfig: null
    insecuressl: null
    location: null
    reportbuildstatus: null
    sourceidentifier: null
    type: "NO_SOURCE"
  sourceversion: null
  tags:
  {% for pipeline_tags in pipeline_tags %}
  - key: "{{ pipeline_tags.key }}"
    value: "{{ pipeline_tags.value }}"
  {% endfor %}
  timeoutinminutes: {{ pipeline_run_timeout_min }}
  {% if (not vpc_config) or vpc_config|length == 0 or vpc_config.vpcid == "" %}
  vpcconfig: null
  {% else %}
  vpcconfig: {{ vpc_config|cpi_json }}
  {% endif %}
