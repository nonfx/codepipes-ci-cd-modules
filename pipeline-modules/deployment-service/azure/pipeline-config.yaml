provisioner: azure
name: pipeline-config
version: 1
revision: 1
displayName: Configure Pipeline
description: Configure global pipeline options and environment.
target: config
keywords:
  - env
  - environment
  - secret
  - config
  - configuration
author: CloudCover
meta: {}
inputs:
  properties:
    variable_group_name:
      title: Secret Variables Group
      description: Keeps all secret variables available to pipeline.
      type: string
      default: ""
    pool_name:
      title: Pool Name
      description: Use selfhosted agent by proving agent pool name.
      type: string
      default: ""
    pipeline_module_git:
      title: Pipeline module git repo url
      description: git url for cloning the pipeline module repo.
      type: string
    pipeline_env:
      title: Global Environment
      description: Mapping of globally available variables to values.
      type: object
      default: {}
    pipeline_module_git_rev:
      title: Pipeline module git repo revision
      description: git revision for cloning the pipeline module repo.
      type: string
    pipeline_secret_env:
      title: Global Secret Environment
      description: Mapping of globally available variables to encrypted values.
      type: object
      default: {}
    pipeline_secret_env_key:
      title: Secret Environment Encryption Key
      description: Name of a KMS key used to encrypt secret values.
      type: string
      default: ""
    repository:
      title: repository
      description:  Git repository
      type: string
    repo_dir:
      title: Repo Dir
      description:  Repo Dir
      type: string
    tag:
      title: Tag of either container or artifact
      description: git revision for cloning the pipeline module repo.
      type: string
  required:
    - variable_group_name
  internal:
    - variable_group_name
    - pipeline_env
    - pipeline_secret_env
    - pipeline_secret_env_key
    - pipeline_module_git
    - pipeline_module_git_rev
    - repo_dir
    - repository
    - tag
template: |
  {% set workspace = '$BUILD_SOURCESDIRECTORY' %}
  {% set pipeline_env_file = workspace|add:'/.env' %}
  {% set pipeline_secret_file = workspace|add:'/.secret.env' %}
  {% set pipeline_modules_path = workspace|add:'/pipeline_modules' %}
  {% set source_code_path = workspace|add:'/source_code' %}

  pool:
  {% if pool_name %}
    name: {{ pool_name }}
  {% else %}
    vmImage: ubuntu-latest
  {% endif %}
  name: '$(Date:yyyyMMdd)$(Rev:.r)'
  trigger: none
  steps:
  - script: |
      rm -rf ~/.gitconfig 
      git config --global url."https://$(git_username):$(GIT_PASSWORD)@github.com/".insteadOf "https://github.com/"
    displayName: 'Git Access'
  - script: |
      set -e
      # installing jq v1.6
      curl -sLJO https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
      jq --version
      echo "Writing env file at  {{pipeline_env_file}}"

      {%- for env_key in pipeline_env %}
        export {{env_key}}="$({{env_key}})"
        printf "{{env_key}}=%s\n" "$(printf "${{env_key}}" | jq -aRs .)" >> {{pipeline_env_file}}
      {% endfor %}
      {%- for env_key in pipeline_secret_env %}
        export {{env_key}}="$({{env_key}})"
        printf "{{env_key}}=%s\n" "$(printf "${{env_key}}" | jq -aRs .)" >> {{pipeline_secret_file}}
      {% endfor %}

      echo "Printing env file..."
      cat {{pipeline_env_file}}

      echo "Cloning the pipeline modules..."
      mkdir -p {{pipeline_modules_path}}
      git clone {{pipeline_module_git}} --branch {{pipeline_module_git_rev}} --single-branch {{pipeline_modules_path}}

      echo "{{repository}}: {{tag}} /{{repo_dir}}"
      if [ ! -z "$git_repo" -a "$git_repo" != " " ]; then
          mkdir -p {{source_code_path}}
          git clone $git_repo --single-branch {{source_code_path}}
          cd {{source_code_path}}
          git fetch $git_repo {{tag}}
          git checkout {{tag}}
          ls {{source_code_path}}/{{repo_dir}}/
      fi
  variables:
    - group: {{ variable_group_name }}
    - name: __VG_EXPORTED_ENV_NAMES
      value: {% for env_key in pipeline_env %} {{env_key}} {% endfor %}
    - name: __VG_EXPORTED_SECRET_ENV_NAMES
      value: {% for env_key in pipeline_secret_env %} {{env_key}} {% endfor %}
